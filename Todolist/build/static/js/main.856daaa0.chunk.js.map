{"version":3,"sources":["Todolist_new/Todoinput.js","Todolist_new/Header.js","Todolist_new/Todoitem.js","Todolist_new/Thelist.js","Todolist_new/Bodies.js","Todolist_new/Todolist.js","index.js"],"names":["Todoinput","theAddList","event","key","props","addList","target","value","type","onKeyPress","this","className","placeholder","required","Component","Header","style","float","marginRight","add","Todoitem","theChange","item","status","toChangeStatus","id","toBackStatus","text","clickDelete","console","log","onChange","checked","onClick","Thelist","title","todo","list","filter","length","map","finish","deleted","Bosies","Todolist","setState","preState","newTodo","Object","assign","push","Date","getTime","localStorage","setItem","JSON","stringify","todolist","parse","getItem","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856daaa0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./Todolist.css\"\r\n\r\n\r\nexport default class Todoinput extends Component {\r\n    theAddList = (event) => {\r\n        if(event.key === 'Enter') {\r\n            this.props.addList(event.target.value)\r\n            event.target.value = ''\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" onKeyPress={this.theAddList} className=\"header-input\" placeholder=\"添加ToDo\" required=\"required\"></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Todoinput from './Todoinput';\r\nimport './Todolist.css' \r\n\r\nexport default class Header extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <div style={{float:\"left\",marginRight:\"20px\"}} className=\"header-title\">ToDoList</div>\r\n                    <Todoinput style={{float:\"left\"}} addList={this.props.add}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./Todolist.css\"\r\n\r\nexport default class Todoitem extends Component{\r\n    theChange = () => {\r\n        if(this.props.item.status === 'working'){\r\n            this.props.toChangeStatus(this.props.item.id)\r\n        }else if(this.props.item.status === 'finished'){\r\n            this.props.toBackStatus(this.props.item.text)\r\n            this.props.clickDelete(this.props.item.id)\r\n        }\r\n    }\r\n    clickDelete = () => {\r\n        this.props.clickDelete(this.props.item.id)\r\n    }\r\n    render() {\r\n        console.log(this.props.item);\r\n        console.log(this.props.toChangeStatus);\r\n        return (\r\n            <div className=\"list-li\">\r\n                <input className=\"list-input\" type=\"checkbox\" onChange={this.theChange} checked={this.props.item.status === 'finished'} ></input>\r\n                <p className=\"list-p\">{this.props.item.text}</p>\r\n                <button className=\"list-button\" onClick={this.clickDelete}>删除</button> \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Todoitem from './Todoitem';\r\nimport \"./Todolist.css\"\r\n\r\nexport default class Thelist extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        return(\r\n            <div className=\"list\">\r\n                <h2 className=\"list-title\">\r\n                {this.props.title}\r\n                    <span className=\"todo-num\">\r\n                        {this.props.todo.list.filter(item => {\r\n                            return item.status === this.props.status\r\n                        }).length}\r\n                    </span>    \r\n                </h2>\r\n                <div>\r\n                {\r\n                    this.props.todo.list.filter(item => {\r\n                        return item.status === this.props.status\r\n                    }).map(item => {\r\n                        return <Todoitem item={item} toChangeStatus={this.props.finish} toBackStatus={this.props.add} key={item.id} clickDelete={this.props.deleted}/>\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Thelist from './Thelist.js'\r\nimport \"./Todolist.css\"\r\n\r\nexport default class Bosies extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        return(\r\n            <div className=\"bodies\">\r\n                <Thelist title=\"正在进行\" todo={this.props.todo} add={this.props.add} finish={this.props.finish} deleted={this.props.deleted} status=\"working\"/>\r\n                <Thelist title=\"已经完成\" todo={this.props.todo} add={this.props.add} finish={this.props.finish} deleted={this.props.deleted} status=\"finished\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Bodies from './Bodies';\r\n\r\n\r\nexport default class Todolist extends Component{\r\n    constructor() {\r\n        super()\r\n        let todolist = JSON.parse(localStorage.getItem('list'));\r\n        console.log(todolist);\r\n        if (todolist === null) {\r\n            this.state = {\r\n                todo:{\r\n                    list: []\r\n            }\r\n                }\r\n        } else {\r\n            this.state = {\r\n                todo:{\r\n                    list: todolist\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    add=(item)=>{ //添加一个todo\r\n        this.setState(preState => {\r\n            let newTodo = preState.todo;\r\n            let list = Object.assign([], newTodo.list)\r\n            list.push({\r\n                text: item,\r\n                id: new Date().getTime(),\r\n                status: 'working'\r\n            })\r\n            newTodo.list = list\r\n            localStorage.setItem(\"list\",JSON.stringify(newTodo.list));\r\n            return {\r\n                todo: newTodo\r\n            }\r\n        })\r\n    }\r\n\r\n    deleted=(id) => { //删除一个todo\r\n        this.setState(preState => {\r\n            let newTodo = preState.todo\r\n            let list = newTodo.list.filter(item => id !== item.id)\r\n            newTodo.list = list\r\n            localStorage.setItem(\"list\",JSON.stringify(newTodo.list));\r\n            return {\r\n                todo: newTodo\r\n            }\r\n        })\r\n    }\r\n    finish=(id) => { //完成一个todo\r\n        this.setState(preState => {\r\n            let newTodo = preState.todo\r\n            let list = newTodo.list.map(item => {\r\n                if(item.id === id) {\r\n                    item.status = 'finished'\r\n                }\r\n                return item\r\n            })\r\n            newTodo.list = list\r\n            localStorage.setItem(\"list\",JSON.stringify(newTodo.list));\r\n            return {\r\n                todo: newTodo\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.todo.list);\r\n        return(\r\n            <div className=\"todolist\">\r\n                <Header todo={this.state.todo} add={this.add}/>\r\n                <Bodies todo={this.state.todo} add={this.add} finish={this.finish} deleted={this.deleted}/>\r\n            </div>\r\n        )\r\n    }\r\n}","// 只认index.js\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import App from './App';\r\n// import './index.css';\r\nimport Todolist from './Todolist_new/Todolist'\r\nimport './Todolist_new/Todolist.css'\r\n\r\n\r\n// 容器组件/UI组件(展示组件)\r\n// 智能组件/木偶组件\r\n\r\n// 容器组件(container/pages)：逻辑，功能\r\n// UI组件(components)：展示，返回React元素\r\n\r\n// ReactDOM.render(\r\n//     <App/>,\r\n//     document.getElementById(\"root\")\r\n// )\r\n\r\n\r\n// todolist_work\r\nReactDOM.render(\r\n    <Todolist/>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}